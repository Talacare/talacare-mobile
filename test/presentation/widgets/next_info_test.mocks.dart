// Mocks generated by Mockito 5.4.4 from annotations
// in talacare/test/presentation/widgets/next_info_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:typed_data' as _i6;
import 'dart:ui' as _i7;

import 'package:audioplayers/audioplayers.dart' as _i2;
import 'package:flutter/services.dart' as _i8;
import 'package:flutter_tts/flutter_tts.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAudioCache_0 extends _i1.SmartFake implements _i2.AudioCache {
  _FakeAudioCache_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompleter_1<T> extends _i1.SmartFake implements _i3.Completer<T> {
  _FakeCompleter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpeechRateValidRange_2 extends _i1.SmartFake
    implements _i4.SpeechRateValidRange {
  _FakeSpeechRateValidRange_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AudioPlayer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioPlayer extends _i1.Mock implements _i2.AudioPlayer {
  MockAudioPlayer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AudioCache get audioCache => (super.noSuchMethod(
        Invocation.getter(#audioCache),
        returnValue: _FakeAudioCache_0(
          this,
          Invocation.getter(#audioCache),
        ),
      ) as _i2.AudioCache);

  @override
  set audioCache(_i2.AudioCache? _audioCache) => super.noSuchMethod(
        Invocation.setter(
          #audioCache,
          _audioCache,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get playerId => (super.noSuchMethod(
        Invocation.getter(#playerId),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#playerId),
        ),
      ) as String);

  @override
  _i3.Completer<void> get creatingCompleter => (super.noSuchMethod(
        Invocation.getter(#creatingCompleter),
        returnValue: _FakeCompleter_1<void>(
          this,
          Invocation.getter(#creatingCompleter),
        ),
      ) as _i3.Completer<void>);

  @override
  double get volume => (super.noSuchMethod(
        Invocation.getter(#volume),
        returnValue: 0.0,
      ) as double);

  @override
  double get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: 0.0,
      ) as double);

  @override
  double get playbackRate => (super.noSuchMethod(
        Invocation.getter(#playbackRate),
        returnValue: 0.0,
      ) as double);

  @override
  _i2.PlayerMode get mode => (super.noSuchMethod(
        Invocation.getter(#mode),
        returnValue: _i2.PlayerMode.mediaPlayer,
      ) as _i2.PlayerMode);

  @override
  _i2.ReleaseMode get releaseMode => (super.noSuchMethod(
        Invocation.getter(#releaseMode),
        returnValue: _i2.ReleaseMode.release,
      ) as _i2.ReleaseMode);

  @override
  _i2.PlayerState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i2.PlayerState.stopped,
      ) as _i2.PlayerState);

  @override
  set state(_i2.PlayerState? state) => super.noSuchMethod(
        Invocation.setter(
          #state,
          state,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Stream<_i2.AudioEvent> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i3.Stream<_i2.AudioEvent>.empty(),
      ) as _i3.Stream<_i2.AudioEvent>);

  @override
  _i3.Stream<_i2.PlayerState> get onPlayerStateChanged => (super.noSuchMethod(
        Invocation.getter(#onPlayerStateChanged),
        returnValue: _i3.Stream<_i2.PlayerState>.empty(),
      ) as _i3.Stream<_i2.PlayerState>);

  @override
  _i3.Stream<Duration> get onPositionChanged => (super.noSuchMethod(
        Invocation.getter(#onPositionChanged),
        returnValue: _i3.Stream<Duration>.empty(),
      ) as _i3.Stream<Duration>);

  @override
  _i3.Stream<Duration> get onDurationChanged => (super.noSuchMethod(
        Invocation.getter(#onDurationChanged),
        returnValue: _i3.Stream<Duration>.empty(),
      ) as _i3.Stream<Duration>);

  @override
  _i3.Stream<void> get onPlayerComplete => (super.noSuchMethod(
        Invocation.getter(#onPlayerComplete),
        returnValue: _i3.Stream<void>.empty(),
      ) as _i3.Stream<void>);

  @override
  _i3.Stream<void> get onSeekComplete => (super.noSuchMethod(
        Invocation.getter(#onSeekComplete),
        returnValue: _i3.Stream<void>.empty(),
      ) as _i3.Stream<void>);

  @override
  _i3.Stream<String> get onLog => (super.noSuchMethod(
        Invocation.getter(#onLog),
        returnValue: _i3.Stream<String>.empty(),
      ) as _i3.Stream<String>);

  @override
  _i3.Future<void> play(
    _i2.Source? source, {
    double? volume,
    double? balance,
    _i2.AudioContext? ctx,
    Duration? position,
    _i2.PlayerMode? mode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #play,
          [source],
          {
            #volume: volume,
            #balance: balance,
            #ctx: ctx,
            #position: position,
            #mode: mode,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setAudioContext(_i2.AudioContext? ctx) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAudioContext,
          [ctx],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPlayerMode(_i2.PlayerMode? mode) => (super.noSuchMethod(
        Invocation.method(
          #setPlayerMode,
          [mode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> resume() => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> release() => (super.noSuchMethod(
        Invocation.method(
          #release,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> seek(Duration? position) => (super.noSuchMethod(
        Invocation.method(
          #seek,
          [position],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setBalance(double? balance) => (super.noSuchMethod(
        Invocation.method(
          #setBalance,
          [balance],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setReleaseMode(_i2.ReleaseMode? releaseMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReleaseMode,
          [releaseMode],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPlaybackRate(double? playbackRate) => (super.noSuchMethod(
        Invocation.method(
          #setPlaybackRate,
          [playbackRate],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSource(_i2.Source? source) => (super.noSuchMethod(
        Invocation.method(
          #setSource,
          [source],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSourceUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #setSourceUrl,
          [url],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSourceDeviceFile(String? path) => (super.noSuchMethod(
        Invocation.method(
          #setSourceDeviceFile,
          [path],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSourceAsset(String? path) => (super.noSuchMethod(
        Invocation.method(
          #setSourceAsset,
          [path],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSourceBytes(_i6.Uint8List? bytes) => (super.noSuchMethod(
        Invocation.method(
          #setSourceBytes,
          [bytes],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<Duration?> getDuration() => (super.noSuchMethod(
        Invocation.method(
          #getDuration,
          [],
        ),
        returnValue: _i3.Future<Duration?>.value(),
      ) as _i3.Future<Duration?>);

  @override
  _i3.Future<Duration?> getCurrentPosition() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentPosition,
          [],
        ),
        returnValue: _i3.Future<Duration?>.value(),
      ) as _i3.Future<Duration?>);

  @override
  _i3.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [FlutterTts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTts extends _i1.Mock implements _i4.FlutterTts {
  MockFlutterTts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set startHandler(_i7.VoidCallback? _startHandler) => super.noSuchMethod(
        Invocation.setter(
          #startHandler,
          _startHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set initHandler(_i7.VoidCallback? _initHandler) => super.noSuchMethod(
        Invocation.setter(
          #initHandler,
          _initHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set completionHandler(_i7.VoidCallback? _completionHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #completionHandler,
          _completionHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set pauseHandler(_i7.VoidCallback? _pauseHandler) => super.noSuchMethod(
        Invocation.setter(
          #pauseHandler,
          _pauseHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set continueHandler(_i7.VoidCallback? _continueHandler) => super.noSuchMethod(
        Invocation.setter(
          #continueHandler,
          _continueHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set cancelHandler(_i7.VoidCallback? _cancelHandler) => super.noSuchMethod(
        Invocation.setter(
          #cancelHandler,
          _cancelHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set progressHandler(_i4.ProgressHandler? _progressHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #progressHandler,
          _progressHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set errorHandler(_i4.ErrorHandler? _errorHandler) => super.noSuchMethod(
        Invocation.setter(
          #errorHandler,
          _errorHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<int?> get getMaxSpeechInputLength => (super.noSuchMethod(
        Invocation.getter(#getMaxSpeechInputLength),
        returnValue: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);

  @override
  _i3.Future<dynamic> get getLanguages => (super.noSuchMethod(
        Invocation.getter(#getLanguages),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getEngines => (super.noSuchMethod(
        Invocation.getter(#getEngines),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getDefaultEngine => (super.noSuchMethod(
        Invocation.getter(#getDefaultEngine),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getDefaultVoice => (super.noSuchMethod(
        Invocation.getter(#getDefaultVoice),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> get getVoices => (super.noSuchMethod(
        Invocation.getter(#getVoices),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<_i4.SpeechRateValidRange> get getSpeechRateValidRange =>
      (super.noSuchMethod(
        Invocation.getter(#getSpeechRateValidRange),
        returnValue: _i3.Future<_i4.SpeechRateValidRange>.value(
            _FakeSpeechRateValidRange_2(
          this,
          Invocation.getter(#getSpeechRateValidRange),
        )),
      ) as _i3.Future<_i4.SpeechRateValidRange>);

  @override
  _i3.Future<dynamic> awaitSpeakCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitSpeakCompletion,
          [awaitCompletion],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> awaitSynthCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitSynthCompletion,
          [awaitCompletion],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> synthesizeToFile(
    String? text,
    String? fileName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #synthesizeToFile,
          [
            text,
            fileName,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setSpeechRate(double? rate) => (super.noSuchMethod(
        Invocation.method(
          #setSpeechRate,
          [rate],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setSharedInstance(bool? sharedSession) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSharedInstance,
          [sharedSession],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> autoStopSharedSession(bool? autoStop) =>
      (super.noSuchMethod(
        Invocation.method(
          #autoStopSharedSession,
          [autoStop],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setIosAudioCategory(
    _i4.IosTextToSpeechAudioCategory? category,
    List<_i4.IosTextToSpeechAudioCategoryOptions>? options, [
    _i4.IosTextToSpeechAudioMode? mode =
        _i4.IosTextToSpeechAudioMode.defaultMode,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIosAudioCategory,
          [
            category,
            options,
            mode,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setEngine(String? engine) => (super.noSuchMethod(
        Invocation.method(
          #setEngine,
          [engine],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setPitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setPitch,
          [pitch],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setVoice(Map<String, String>? voice) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoice,
          [voice],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> isLanguageAvailable(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLanguageAvailable,
          [language],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> isLanguageInstalled(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLanguageInstalled,
          [language],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> areLanguagesInstalled(List<String>? languages) =>
      (super.noSuchMethod(
        Invocation.method(
          #areLanguagesInstalled,
          [languages],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setSilence(int? timems) => (super.noSuchMethod(
        Invocation.method(
          #setSilence,
          [timems],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> setQueueMode(int? queueMode) => (super.noSuchMethod(
        Invocation.method(
          #setQueueMode,
          [queueMode],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  void setStartHandler(_i7.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setStartHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitHandler(_i7.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setInitHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCompletionHandler(_i7.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setCompletionHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setContinueHandler(_i7.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setContinueHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPauseHandler(_i7.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setPauseHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCancelHandler(_i7.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setCancelHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setProgressHandler(_i4.ProgressHandler? callback) => super.noSuchMethod(
        Invocation.method(
          #setProgressHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorHandler(_i4.ErrorHandler? handler) => super.noSuchMethod(
        Invocation.method(
          #setErrorHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<dynamic> platformCallHandler(_i8.MethodCall? call) =>
      (super.noSuchMethod(
        Invocation.method(
          #platformCallHandler,
          [call],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}
