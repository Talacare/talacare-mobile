// Mocks generated by Mockito 5.4.4 from annotations
// in talacare/test/presentation/providers/schedule_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:talacare/domain/entities/schedule_entity.dart' as _i5;
import 'package:talacare/domain/repositories/schedule_repository.dart' as _i2;
import 'package:talacare/domain/usecases/schedule_usecase.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeScheduleRepository_0 extends _i1.SmartFake
    implements _i2.ScheduleRepository {
  _FakeScheduleRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ScheduleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockScheduleUseCase extends _i1.Mock implements _i3.ScheduleUseCase {
  @override
  _i2.ScheduleRepository get scheduleRepository => (super.noSuchMethod(
        Invocation.getter(#scheduleRepository),
        returnValue: _FakeScheduleRepository_0(
          this,
          Invocation.getter(#scheduleRepository),
        ),
        returnValueForMissingStub: _FakeScheduleRepository_0(
          this,
          Invocation.getter(#scheduleRepository),
        ),
      ) as _i2.ScheduleRepository);

  @override
  _i4.Future<void> createSchedule(_i5.ScheduleEntity? schedule) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSchedule,
          [schedule],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<String>> getSchedulesByUserId() => (super.noSuchMethod(
        Invocation.method(
          #getSchedulesByUserId,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);
}
