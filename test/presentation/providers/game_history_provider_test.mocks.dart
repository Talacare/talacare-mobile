// Mocks generated by Mockito 5.4.4 from annotations
// in talacare/test/presentation/providers/game_history_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:talacare/domain/entities/game_history_entity.dart' as _i5;
import 'package:talacare/domain/repositories/game_history_repository.dart'
    as _i2;
import 'package:talacare/domain/usecases/game_history_usecase.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGameHistoryRepository_0 extends _i1.SmartFake
    implements _i2.GameHistoryRepository {
  _FakeGameHistoryRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GameHistoryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGameHistoryUseCase extends _i1.Mock
    implements _i3.GameHistoryUseCase {
  @override
  _i2.GameHistoryRepository get gameHistoryRepository => (super.noSuchMethod(
        Invocation.getter(#gameHistoryRepository),
        returnValue: _FakeGameHistoryRepository_0(
          this,
          Invocation.getter(#gameHistoryRepository),
        ),
        returnValueForMissingStub: _FakeGameHistoryRepository_0(
          this,
          Invocation.getter(#gameHistoryRepository),
        ),
      ) as _i2.GameHistoryRepository);

  @override
  _i4.Future<void> createGameHistory(_i5.GameHistoryEntity? gameHistory) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGameHistory,
          [gameHistory],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
